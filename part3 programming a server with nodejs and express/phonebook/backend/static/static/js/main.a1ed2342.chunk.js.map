{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","post","id","put","delete","Filter","search","handleSearch","value","onChange","Person","person","deletePerson","name","number","onClick","Persons","persons","map","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","searchText","setSearchText","setMessage","messageType","setMessageType","personsToShow","filter","toLowerCase","includes","showMessage","setTimeout","useEffect","personService","event","target","preventDefault","index","indexOf","action","promise","window","confirm","personsCopy","concat","find","e","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAEMA,EAAU,eAOD,EALF,kBAAMC,IAAMC,IAAIF,GAASG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAKjD,EAJA,SAAAA,GAAI,OAAIJ,IAAMK,KAAKN,EAASK,GAAMF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAI5D,EAHA,SAACE,EAAIF,GAAL,OAAcJ,IAAMO,IAAN,UAAaR,EAAb,YAAwBO,GAAMF,GAAMF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAG5E,EAFC,SAAAE,GAAE,OAAIN,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BO,IAAMJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OCJ3EK,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aACvB,OACE,sDACqB,uBAAOC,MAAOF,EAAQG,SAAUF,QAKnDG,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aACvB,OACE,gCACGD,EAAOE,KADV,IACiBF,EAAOG,OACtB,wBAAQC,QAAS,kBAAMH,EAAaD,IAApC,wBAKAK,EAAU,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASL,EAAkB,EAAlBA,aACzB,OACE,mCACGK,EAAQC,KAAI,SAAAP,GAAM,OAAI,cAAC,EAAD,CAAwBA,OAAQA,EAAQC,aAAcA,GAAzCD,EAAOT,UAK3CiB,EAAa,SAACC,GAClB,OACE,uBAAMC,SAAUD,EAAME,UAAtB,UACE,yCACQ,uBAAOd,MAAOY,EAAMG,QAASd,SAAUW,EAAMI,sBAErD,2CACU,uBAAOhB,MAAOY,EAAMK,UAAWhB,SAAUW,EAAMM,wBAEzD,8BACE,wBAAQC,KAAK,SAAb,uBAMFC,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASF,EAAW,EAAXA,KAC/B,GAAgB,OAAZE,EACF,OAAO,KAGT,IAAMC,EAAS,kBAAcH,GAE7B,OACE,qBAAKG,UAAWA,EAAhB,SACGD,KA4FQE,EAvFH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQf,EAAR,KAAiBgB,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAQT,EAAR,KAAiBW,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAQP,EAAR,KAAmBU,EAAnB,KACA,EAAsCH,mBAAS,IAA/C,mBAAQI,EAAR,KAAoBC,EAApB,KACA,EAAgCL,mBAAS,MAAzC,mBAAQH,EAAR,KAAiBS,EAAjB,KACA,EAAwCN,mBAAS,WAAjD,mBAAQO,EAAR,KAAqBC,EAArB,KACMC,EAAgBxB,EAAQyB,QAAO,SAAA/B,GAAM,OAAIA,EAAOE,KAAK8B,cAAcC,SAASR,EAAWO,kBAmDvFE,EAAc,SAAChB,EAASF,GAC5Ba,EAAeb,GACfW,EAAWT,GACXiB,YAAW,kBAAMR,EAAW,QAAO,MAOrC,OAJAS,qBAAU,WACRC,IAAqBlD,MAAK,SAAAE,GAAI,OAAIiC,EAAWjC,QAC5C,IAGD,gCACE,2CACA,cAAC,EAAD,CAAc6B,QAASA,EAASF,KAAMY,IACtC,cAAC,EAAD,CAAQjC,OAAQ8B,EAAY7B,aA7DD,SAAC0C,GAAD,OAAWZ,EAAcY,EAAMC,OAAO1C,UA8DjE,2CACA,cAAC,EAAD,CACEc,UA9DY,SAAC2B,GACjBA,EAAME,iBACN,IAAIC,EAAQnC,EAAQC,KAAI,SAAAP,GAAM,OAAIA,EAAOE,QAAMwC,QAAQ9B,GACnD+B,EAASF,GAAS,EAAI,UAAY,QAClCG,EAAU,KACd,GAAIH,GAAS,EAAG,CACd,IAAIzC,EAASM,EAAQmC,GACrB,IAAKI,OAAOC,QAAP,UAAkB9C,EAAOE,KAAzB,2EACH,OAEF0C,EAAUP,EAAqBrC,EAAOT,GAA5B,2BAAoCS,GAApC,IAA4CG,OAAQW,KAC3D3B,MAAK,SAAAE,GACJ,IAAI0D,EAAW,YAAOzC,GAMtB,OALIjB,EACF0D,EAAYN,GAASpD,EAErB0D,EAAczC,EAAQyB,QAAO,SAAA/B,GAAM,OAAIA,EAAOT,KAAOe,EAAQmC,GAAOlD,MAE/DwD,UAGXH,EAAUP,EAAqB,CAACnC,KAAMU,EAAST,OAAQW,IACpD3B,MAAK,SAAAE,GAAI,OAAIiB,EAAQ0C,OAAO3D,MAEjCuD,EAAQzD,MAAK,SAAAE,GACPoD,GAAS,IAAMpD,EAAK4D,MAAK,SAAAC,GAAC,OAAIA,EAAE3D,KAAOe,EAAQmC,GAAOlD,MACxD2C,EAAY,kBAAD,OAAmBtB,EAAnB,yCAAmE,SAE9EsB,EAAY,GAAD,OAAIS,EAAJ,YAAc/B,GAAW,WAEtCU,EAAWjC,GACXkC,EAAW,IACXC,EAAa,OACZ2B,OAAM,SAAAC,GACPlB,EAAYkB,EAAMhE,SAASC,KAAK+D,MAAO,aA6BrCxC,QAASA,EACTC,iBApEmB,SAACyB,GAAD,OAAWf,EAAWe,EAAMC,OAAO1C,QAqEtDiB,UAAWA,EACXC,mBArEqB,SAACuB,GAAD,OAAWd,EAAac,EAAMC,OAAO1C,UAuE5D,yCACA,cAAC,EAAD,CAASS,QAASwB,EAAe7B,aA/BhB,SAACD,GAChB6C,OAAOC,QAAP,iBAAyB9C,EAAOE,KAAhC,OACFmC,EAAqBrC,EAAOT,IACzBJ,MAAK,kBAAMmC,EAAWhB,EAAQyB,QAAO,SAAAmB,GAAC,OAAIA,EAAE3D,KAAOS,EAAOT,iB,MC3GnE8D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a1ed2342.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst list = () => axios.get(baseUrl).then(response => response.data)\nconst create = data => axios.post(baseUrl, data).then(response => response.data)\nconst update = (id, data) => axios.put(`${baseUrl}/${id}`, data).then(response => response.data)\nconst _delete = id => axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n\nexport default { list, create, update, delete: _delete }\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Filter = ({search, handleSearch}) => {\n  return (\n    <div>\n      filter shown with: <input value={search} onChange={handleSearch} />\n    </div>\n  )\n}\n\nconst Person = ({person, deletePerson}) => {\n  return (\n    <div>\n      {person.name} {person.number}\n      <button onClick={() => deletePerson(person)}>delete</button>\n    </div>\n  )\n}\n\nconst Persons = ({persons, deletePerson}) => {\n  return (\n    <>\n      {persons.map(person => <Person key={person.id} person={person} deletePerson={deletePerson} />)}\n    </>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  const className = `message ${type}`\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchText, setSearchText ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ messageType, setMessageType ] = useState('success')\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(searchText.toLowerCase()))\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleSearchTextChange = (event) => setSearchText(event.target.value)\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    let index = persons.map(person => person.name).indexOf(newName)\n    let action = index >= 0 ? 'Updated' : 'Added'\n    let promise = null\n    if (index >= 0) {\n      let person = persons[index]\n      if (!window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n        return\n      }\n      promise = personService.update(person.id, {...person, number: newNumber})\n        .then(data => {\n          let personsCopy = [...persons]\n          if (data) {\n            personsCopy[index] = data\n          } else {\n            personsCopy = persons.filter(person => person.id !== persons[index].id)\n          }\n          return personsCopy\n        })\n    } else {\n      promise = personService.create({name: newName, number: newNumber})\n        .then(data => persons.concat(data))\n    }\n    promise.then(data => {\n      if (index >= 0 && !data.find(e => e.id === persons[index].id)) {\n        showMessage(`Information of ${newName} has already been removed from server`, 'error')\n      } else {\n        showMessage(`${action} ${newName}`, 'success')\n      }\n      setPersons(data)\n      setNewName('')\n      setNewNumber('')\n    }).catch(error => {\n      showMessage(error.response.data.error, 'error')\n    })\n  }\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.delete(person.id)\n        .then(() => setPersons(persons.filter(e => e.id !== person.id)))\n    }\n  }\n\n  const showMessage = (message, type) => {\n    setMessageType(type)\n    setMessage(message)\n    setTimeout(() => setMessage(null), 3000)\n  }\n\n  useEffect(() => {\n    personService.list().then(data => setPersons(data))\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter search={searchText} handleSearch={handleSearchTextChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}